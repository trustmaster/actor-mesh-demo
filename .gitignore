# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include all the files under .idea directory.
.idea/

# VS Code
.vscode/
*.code-workspace

# Local History for Visual Studio Code
.history/

# Windows thumbnail cache files
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~

# temporary files which can be created if a process still has a handle open of a deleted file
.fuse_hidden*

# KDE directory preferences
.directory

# Linux trash folder which might appear on any partition or disk
.Trash-*

# .nfs files are created when an open file is removed but is still being accessed
.nfs*

# Project-specific files and directories

# Logs
*.log
logs/
gateway.log
nats.log
redis.log
actor_*.log

# Database files
*.db
*.sqlite
*.sqlite3
data/conversations.db
data/sessions.db

# Temporary data files
temp/
tmp/
*.tmp
*.temp

# Cache directories
.cache/
cache/
*.cache

# Configuration files with sensitive data
.env.local
.env.production
.env.staging
config/local.yml
config/production.yml

# Storage data
data/
storage/
uploads/
downloads/

# Docker volumes and containers
docker-data/
volumes/

# Kubernetes secrets and configs
k8s/secrets/
k8s/overlays/*/secrets/
*.secret.yaml
*.secret.yml

# NATS data
nats-data/
jetstream/

# Redis data
redis-data/
dump.rdb

# Process IDs
*.pid
pids/

# Lock files
*.lock
.lock

# Backup files
*.bak
*.backup
*.old
backup/
backups/

# Test artifacts
test-results/
test-output/
.coverage.*
coverage-reports/
junit.xml
pytest.xml

# Performance test results
load-test-results/
performance-reports/
*.jmx
*.jtl

# Documentation build artifacts
docs/build/
docs/_build/
site/

# IDE and editor files
*.swp
*.swo
*~
.vim/
.emacs.d/

# macOS Finder
.DS_Store?
Icon?

# Thumbnails
._*

# Package files
*.dmg
*.pkg
*.deb
*.rpm
*.tar.gz
*.zip
*.7z

# Development tools
.ruff_cache/
.black.toml
.isort.cfg

# Monitoring and metrics
metrics/
monitoring/
grafana-data/
prometheus-data/

# SSL certificates
*.pem
*.key
*.crt
*.p12
*.pfx
ssl/
certs/

# Local development overrides
docker-compose.override.yml
.env.override
local.yaml

# Dependency directories (if not using virtual environments)
node_modules/
bower_components/

# Build artifacts
build/
dist/
out/
target/

# Generated files
generated/
auto-generated/
*.generated.*

# System files
.DS_Store
Thumbs.db
desktop.ini
